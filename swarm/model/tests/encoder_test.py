#!/usr/bin/env python3
import pytest
from coder_lib import encode, encode_many 

def test_int_encode():
    ret = encode("int256", "-2")
    expected = "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe"
    assert ret == expected


# num must be positive
def test_uint_encode():
    ret = encode("int256", "100000000000000000000000000000000022222222222222221111111111111")
    expected = "0000000000003e3aeb4ae1383562f4b82261d96a3f7a5f62ca19599c1ad6d1c7"
    assert ret == expected


# def test_string_encode(string: str):
#     ret = encode("string", string)
#     expected = ""
#     print(ret)
#     assert ret == expected


def test_array_encode():
    ret = encode("bool[]", "[1,0,false]")
    expected = "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    assert ret == expected


# def test_encode_dynamic_array_of_dynamic_arrays():
#     ret = encode("address[][]", "")
#     expected
#     print(ret)
#     assert ret == expected


def test_multi_encode():
    ret = encode_many(["bool", "1", "string", "gavofyork", "bool", "0"])
    expected = "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000"
    assert ret == expected