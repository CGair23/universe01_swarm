#!/usr/bin/env python3
import eth_utils
from tree_graph.client.jsonrpc_client import *
from tree_graph.types.filter import Filter
from coder_lib import encode_many

DEFAULT_TX_GAS_PRICE = 80 * (10 ** 9) * 100 
DEFAULT_TX_GAS = 100000000

CLIENT = JsonRpcClient("192.168.1.31", "12537")
# this is Bob   
BOB_ADDR = "0x19aeb665dfa6a8445a46cd9a5c666ac6c0d03c54"
BOB_PK = "0xb205017cc1b95e12aa37784b3e66eaf099ba6cf0e80cf10f8fc87b44abba53a7"

ALICE_ADDR = "0x1f9422c17a85f15473d5e25834d17d48c2356c7c"
ALICE_PK = "0x5bba79b1fbba518c7283750cf6a1175f3180fab586c1b1787539885f3132ef4f"


# contrace addr = "0x8723756d8b4cab11ffa39e316200513e32c8ef7c"

def test_handler_contract():
    nextNonce = CLIENT.get_nonce(BOB_ADDR)
    # nextNonce = CLIENT.get_nonce(ALICE_ADDR)
    epoch_number = CLIENT.epoch_number()

    func_proto = eth_utils.keccak(b"taskHandler(uint256,uint256)")
    data_prefix = func_proto[0:4].hex()
    data_body = encode_many(["uint256", "1", "uint256", "2"])
    data_hex = data_prefix + data_body

    # print(f"[+] data in hex = {data_hex}")
    b_val = bytes.fromhex(data_hex)

    tx = CLIENT.new_tx(
                    #    sender=ALICE_ADDR,
                       sender=BOB_ADDR,
                       receiver='0x86fac497d9baa9c9c42b5a87296f8984c7e3ba3d', 
                       nonce=nextNonce,
                       gas_price=DEFAULT_TX_GAS_PRICE,
                       gas=DEFAULT_TX_GAS,
                       value=0, 
                       data=b_val, 
                       sign=True, 
                    #    priv_key=ALICE_PK, 
                       priv_key=BOB_PK, 
                       epoch_height=epoch_number, 
                       chain_id=0)
    
    # tx_hash = CLIENT.send_tx(tx)
    # print("[+] the send transaction hash is ", tx_hash)  

    # tx_hash = "0x5c005ac93d068c588b8d17a657db295dca0fccc8fe19ed2a702eef91cedf725e"    # Alice
    # tx_hash = "0x755c28d48b3f74af3bae2837767f775996c843e87cbdb399e8e7d845a5f46f5a"    # Bob
    # tx_info = CLIENT.get_tx(tx_hash)
    # print(f"[+] the tx info of {tx_hash} is ", tx_info)
    
    # tx_receipt = CLIENT.get_transaction_receipt(tx_hash)
    # print(f"[+] the tx receip of {tx_hash} is ", tx_receipt)     # the contract is deployed after sending a transaction with data as bytecode. 
                                                            # The contractCreated field of the transaction receipt is the contract address after deployment.

    # filter = Filter(
    #     address=["0x8723756d8b4cab11ffa39e316200513e32c8ef7c"]
    #     )
    # logs = CLIENT.get_logs(filter)
    # print(f"[+] logs[] is {logs}")


def test_recorder_contract():
    nextNonce = CLIENT.get_nonce(BOB_ADDR)
    # nextNonce = CLIENT.get_nonce(ALICE_ADDR)
    epoch_number = CLIENT.epoch_number()

    func_proto = eth_utils.keccak(b"recordPara(uint256,uint128,uint128,uint64,uint64,uint128,uint128,int128[])")
    data_prefix = func_proto[0:4].hex()
    data_body = encode_many(["uint", "1", "int128", "1", "int128", "1", "uint64", "1", \
                                    "uint64", "1", "uint128", "1", "uint128", "1", "int128[]", "[-80241337,237499829,-38564152,-58856187,22570223,175331999,-83909295,109190438,-178776160,-23182784]"])
    data_hex = data_prefix + data_body

    # print(f"[+] data in hex = {data_hex}")
    expected = "5daadbabafffffffffffffffffffffffffffffffffffffffffffffffffffffffffb379d47000000000000000000000000000000000000000000000000000000000e27f5b5fffffffffffffffffffffffffffffffffffffffffffffffffffffffffdb38ec8fffffffffffffffffffffffffffffffffffffffffffffffffffffffffc7ded0500000000000000000000000000000000000000000000000000000000015864ef000000000000000000000000000000000000000000000000000000000a735a9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaffa5510000000000000000000000000000000000000000000000000000000006821d26fffffffffffffffffffffffffffffffffffffffffffffffffffffffff55817a0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9e4240"
    assert data_hex == expected
    b_val = bytes.fromhex(expected)

    tx = CLIENT.new_tx(
                       sender=BOB_ADDR,
                    #    sender=ALICE_ADDR,
                       receiver='0x86fac497d9baa9c9c42b5a87296f8984c7e3ba3d', 
                       nonce=nextNonce,
                       gas_price=DEFAULT_TX_GAS_PRICE,
                       gas=DEFAULT_TX_GAS,
                       value=0, 
                       data=b_val, 
                       sign=True, 
                       priv_key=BOB_PK, 
                    #    priv_key=ALICE_PK, 
                       epoch_height=epoch_number, 
                       chain_id=0)
    
    # tx_hash = CLIENT.send_tx(tx)
    # print("[+] the send transaction hash is ", tx_hash)  

    # tx_hash = "0xb3b4e8a34bae1178a9ac8c5d5bc5fd96b2af9ad0fc7d23ab26aa462e9c3c4c6f"    # Bob fail
    # tx_hash = "0x209d0debffbd7a2ed4bf5ef05f27d6f7e976c3ff18680379ca31414e70373937"    # Bob success
    # tx_hash = "0xd81603918e469e048b463e3356df089dbd5a98a9a3f65cc7160bc15902621183"    # Alice success
    # tx_info = CLIENT.get_tx(tx_hash)
    # print(f"[+] the tx info of {tx_hash} is ", tx_info)
    
    # tx_receipt = CLIENT.get_transaction_receipt(tx_hash)
    # print(f"[+] the tx receip of {tx_hash} is ", tx_receipt)     # the contract is deployed after sending a transaction with data as bytecode. 
                                                            # The contractCreated field of the transaction receipt is the contract address after deployment.

    filter = Filter(
        address=["0x86fac497d9baa9c9c42b5a87296f8984c7e3ba3d"]
        )
    logs = CLIENT.get_logs(filter)
    print(f"[+] logs[] is {logs}")


def test_gas():
    bytecode = "608060405234801561001057600080fd5b50612233806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806317f436d9146100675780633b18f6451461009a5780635daadbab146100ea57806368e0659e1461025d5780636c822d8614610332578063fc4333cd14610407575b600080fd5b61006f610411565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6100d0600480360360408110156100b057600080fd5b8101908080359060200190929190803590602001909291905050506104e9565b604051808215151515815260200191505060405180910390f35b610243600480360361010081101561010157600080fd5b810190808035906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190803567ffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101c057600080fd5b8201836020820111156101d257600080fd5b803590602001918460208302840111640100000000831117156101f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610650565b604051808215151515815260200191505060405180910390f35b6102cd6004803603608081101561027357600080fd5b8101908080359060200190929190803567ffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610ad5565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561031c578082015181840152602081019050610301565b5050505090500194505050505060405180910390f35b6103a26004803603608081101561034857600080fd5b8101908080359060200190929190803567ffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610cc4565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156103f15780820151818401526020810190506103d6565b5050505090500194505050505060405180910390f35b61040f610e73565b005b6000806000806000806001815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166000806001815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1660008060018152602001908152602001600020600501805490506000806001815260200190815260200160002060080180549050836fffffffffffffffffffffffffffffffff169350826fffffffffffffffffffffffffffffffff169250935093509350935090919293565b600080600080858152602001908152602001600020905060008160030154141561058e57610518818585610e97565b507f37bb154f4af11c2ad09fcb84fcfa4c6b5d8e1a9cf9f7fc6dedf09d9b9cac0af88433604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600191505061064a565b600115158160040160009054906101000a900460ff1615151415610644576105b581610f45565b50806002015483146105c357fe5b7fc1fe5bc39b930588ec2115239681b70237f5cd8e637e5ec2acf68ae33e87912684338360030154604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1600191505061064a565b60009150505b92915050565b6000806000808b81526020019081526020016000209050600115158160040160009054906101000a900460ff1615151461068657fe5b6000151581600c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060008a6fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000866fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146107cb57fe5b6107d6818a8a610fdd565b8060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16896fffffffffffffffffffffffffffffffff161461082357fe5b8060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16886fffffffffffffffffffffffffffffffff161461087057fe5b610878611fc6565b60405180608001604052808c81526020018967ffffffffffffffff1681526020018867ffffffffffffffff168152602001866fffffffffffffffffffffffffffffffff1681525090506108c9612014565b6040518060400160405280886fffffffffffffffffffffffffffffffff1681526020018681525090506108fd838383611228565b610906836114e9565b61090f83611592565b61091983836116a3565b82600201548360080180549050106109f25760011515610939848461182d565b151514156109ed578260080160006109519190612040565b7f5572b3f2f4cc6c154ee555ce79315632da4659523f9ae1d8dbebf71e6fcf58ef8c8a8a89604051808581526020018467ffffffffffffffff1667ffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff168152602001826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a15b610ac2565b7f5213845946959a8b4c3e89b8a2f5000fd33f91e39c10c86df18ae57605c2cd358c338b8b8a604051808681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018467ffffffffffffffff1667ffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff168152602001826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a15b6001935050505098975050505050505050565b600080606060008088815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff1660008089815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166000808a8152602001908152602001600020600f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000876fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020600101826fffffffffffffffffffffffffffffffff169250816fffffffffffffffffffffffffffffffff16915080805480602002602001604051908101604052809291908181526020018280548015610cad57602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f01049283019260010382029150808411610c765790505b505050505090509250925092509450945094915050565b600080606060008088815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff1660008089815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166000808a815260200190815260200160002060100160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000876fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020826fffffffffffffffffffffffffffffffff169250816fffffffffffffffffffffffffffffffff16915080805480602002602001604051908101604052809291908181526020018280548015610e5c57602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f01049283019260010382029150808411610e255790505b505050505090509250925092509450945094915050565b600080600181526020019081526020016000206008016000610e959190612040565b565b600082846001018190555081846002018190555060018460030181905550836005013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018460040160006101000a81548160ff021916908315150217905550600190509392505050565b600060018260030160008282540192505081905550816002015482600301541115610f6c57fe5b816005013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060019050919050565b6000836008018054905014801561103757508260060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff16115b156110f657818360060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550808360060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550338360070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000836008018054905014801561115057508260060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff16145b801561119f57508260060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff16115b1561122357808360060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550338360070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b600083600f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000846040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600084606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000209050600184600c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060008660060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000206000856020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000856040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600085606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555081602001518160010190805190602001906114e2929190612061565b5050505050565b600080600090505b826005018054905081101561157f5782600501818154811061150f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561157257600191505b80806001019150506114f1565b50600115158115151461158e57fe5b5050565b600080600090505b8260080180549050811015611628578260080181815481106115b857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561161b57600191505b808060010191505061159a565b5060001515811515141561169f57816008013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5050565b8160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561182957816009018160200151908060018154018082558091505090600182039060005260206000209060049182820401919006600802909192909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505081600a018160400151908060018154018082558091505090600182039060005260206000209060049182820401919006600802909192909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505081600b018160600151908060018154018082558091505090600182039060005260206000209060029182820401919006601002909192909190916101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505b5050565b600080836010016000846020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000846040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600084606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000209050600084600f0160008660070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000856040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600085606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490509050600082816119ca9190612138565b5060008090505b81811015611b87578286600f016000886008016000815481106119f057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000876020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000876040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600087606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000206001018281548110611aee57fe5b90600052602060002090600291828204019190066010029054906101000a9004600f0b908060018154018082558091505090600182039060005260206000209060029182820401919006601002909192909190916101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055505080806001019150506119d1565b5084600f01600086600801600081548110611b9e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000856040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600085606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000611c9d9190612172565b6000600190505b8560080180549050811015611fb95760008090505b82811015611e705786600f016000886008018481548110611cd657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000876020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000876040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600087606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000206001018181548110611dd457fe5b90600052602060002090600291828204019190066010029054906101000a9004600f0b848281548110611e0357fe5b90600052602060002090600291828204019190066010028282829054906101000a9004600f0b0192506101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055508080600101915050611cb9565b5085600f016000876008018381548110611e8657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866020015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000866040015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600086606001516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a8154906fffffffffffffffffffffffffffffffff0219169055600182016000611faa9190612172565b50508080600101915050611ca4565b5060019250505092915050565b604051806080016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff1681525090565b604051806040016040528060006fffffffffffffffffffffffffffffffff168152602001606081525090565b508054600082559060005260206000209081019061205e919061219a565b50565b828054828255906000526020600020906001016002900481019282156121275791602002820160005b838211156120e957835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261208a565b80156121255782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f010492830192600103026120e9565b505b50905061213491906121bf565b5090565b81548183558181111561216d57600101600290048160010160029004836000526020600020918201910161216c919061219a565b5b505050565b508054600082556001016002900490600052602060002090810190612197919061219a565b50565b6121bc91905b808211156121b85760008160009055506001016121a0565b5090565b90565b6121fb91905b808211156121f757600081816101000a8154906fffffffffffffffffffffffffffffffff0219169055506001016121c5565b5090565b9056fea265627a7a72315820884209f3bada5494c967f2b14719699434a1062b0c71bbdb325f06b7379c090a64736f6c63430005110032"
    how_many_bytes = len(bytecode) / 2
    print(f"[+] this contract has {how_many_bytes} bytes")
    how_much_gas = 21000 + 100 * how_many_bytes
    print(f"[+] somehow this contract needs gas = {how_much_gas}")
    
    assert how_much_gas < 100000000
    assert how_much_gas * 100 < DEFAULT_TX_GAS